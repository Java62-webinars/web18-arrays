const arr = [{1:1}, {3:3}, {4:4}, {7:7}];
console.log(arr);
const arr2 = new Array(...arr);
console.log(arr2);
arr2[0][1] = 90;
arr[3][7] = "cheburek"
console.log(arr);
console.log(arr2);
arr[4] = 9;
console.log(arr);
arr[0] = "Zero";
console.log(arr);
console.log(arr2);

const obj = { f1: "", f2: { fo1: {}}};

Array.prototype.toString = function () {
    const original = this.join(", ");
    const now = new Date().toLocaleString();
    return `[${original}] (printed ${now})`;
}
const arr3 = ["a", "b", "c"];
console.log(arr3);
console.log("Array: " , arr3);
console.log("Array: " + arr3);
console.log(arr3.toString());

Array.prototype.feel = function() {
    if (this.length === 0) return "üò¢ –Ø –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤";
    if (this.length <= 3) return "üôÇ –Ø —Å–∫—Ä–æ–º–Ω—ã–π –º–∞—Å—Å–∏–≤";
    return "–Ø üòé! –£ –º–µ–Ω—è —É–∂–µ " + this.length + " —ç–ª–µ–º–µ–Ω—Ç–æ–≤!";
};

//======–ù–ï–í–ï–†–ù–û–ï –†–ï–®–ï–ù–ò–ï====================
const originalPush = Array.prototype.push;
const originalPop = Array.prototype.pop;

Array.prototype.push = function(...args) {
    console.log(`–î–æ–±–∞–≤–ª—è–µ–º: ${args}`);
    return originalPush.apply(this, args);
};

Array.prototype.pop = function() {
    const item = originalPop.apply(this);
    console.log(`–£–¥–∞–ª–∏–ª–∏: ${item}`);
    return item;
};

//========================–ß—É—Ç—å –ª—É—á—à–µ======================
// const _push = Array.prototype.push;
// let _logging = false;
//
// Array.prototype.push = function(...values) {
//     const len = this.length;
//     values.reduce((i, v) => { this[i] = v; return i + 1; }, len);
//
//     if (!_logging) {
//         _logging = true;
//         try {
//             values.forEach(v => console.log('you added to array', v));
//         } finally {
//             _logging = false;
//         }
//     }
//     return this.length;
// };

// Array.prototype.pop = function() {
//     const len = this.length;
//
//     // –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π ‚Äî –≤–µ—Ä–Ω—É—Ç—å undefined (–ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ pop)
//     if (len === 0) return undefined;
//
//     // –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
//     const last = this[len - 1];
//
//     // —É–¥–∞–ª—è–µ–º –µ–≥–æ –≤—Ä—É—á–Ω—É—é
//     delete this[len - 1];
//
//     // —É–º–µ–Ω—å—à–∞–µ–º length
//     this.length = len - 1;
//
//     // –ª–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–≥–æ console.log
//     if (!_logging) {
//         _logging = true;
//         try {
//             console.log('you removed from array', last);
//         } finally {
//             _logging = false;
//         }
//     }
//
//     // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∫–∞–∫ –¥–µ–ª–∞–µ—Ç –æ–±—ã—á–Ω—ã–π pop
//     return last;
// };


//========–°–æ–≤—Å–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ
// // --- –æ—Ç–º–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –º–∞—Å—Å–∏–≤—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏–º –ª–æ–≥–∏ ---
// const WATCHED = new WeakSet();
// const watch = (arr) => (WATCHED.add(arr), arr);
// const unwatch = (arr) => WATCHED.delete(arr);
//
// // --- —Ñ–ª–∞–≥ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –∏–∑–Ω—É—Ç—Ä–∏ console.log ---
//
// const safeLog = (...args) => {
//     if (_logging) return;
//     _logging = true;
//     try { console.log(...args); } finally { _logging = false; }
// };
//
// // --- push: –±–µ–∑ apply/call, —Å–æ —Å—Ç—Ä–æ–≥–æ–π —Å–µ–º–∞–Ω—Ç–∏–∫–æ–π ---
// Array.prototype.push = function (...values) {
//     let n = this.length;
//     for (let i = 0; i < values.length; i++) {
//         this[n] = values[i];
//         n++;
//     }
//     this.length = n;
//
//     if (values.length && WATCHED.has(this)) {
//         safeLog('you added to array:', ...values);
//     }
//     return n; // —Å—Ç–∞–Ω–¥–∞—Ä—Ç: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—É—é –¥–ª–∏–Ω—É
// };
//
// // --- pop: –±–µ–∑ apply/call, —Å–æ —Å—Ç—Ä–æ–≥–æ–π —Å–µ–º–∞–Ω—Ç–∏–∫–æ–π ---
// Array.prototype.pop = function () {
//     let len = this.length;
//     if (len === 0) {
//         this.length = 0;
//         return undefined;
//     }
//     len--;
//     const last = this[len];
//
//     // —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å –∏ —É–∫–æ—Ä–æ—Ç–∏—Ç—å –¥–ª–∏–Ω—É
//     if (len in this) delete this[len];
//     this.length = len;
//
//     if (WATCHED.has(this)) {
//         safeLog('you removed from array:', last);
//     }
//     return last; // —Å—Ç–∞–Ω–¥–∞—Ä—Ç: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
// };

// ---------- –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è ----------

// –ª–æ–≥–∏ –¢–û–õ–¨–ö–û –¥–ª—è –ø–æ–º–µ—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞:
const a = watch(['a', 'b', 'c']);
a.push('d', 'e');   // –ª–æ–≥
a.pop();            // –ª–æ–≥

// –¥–ª—è –Ω–µ–ø–æ–º–µ—á–µ–Ω–Ω–æ–≥–æ ‚Äî —Ç–∏—à–∏–Ω–∞:
const b = ['x', 'y'];
b.push('z');        // –Ω–µ—Ç –ª–æ–≥–∞
b.pop();            // –Ω–µ—Ç –ª–æ–≥–∞


console.log([].feel());
console.log(["a", "b", "c"].feel());
console.log(arr.feel());
const planets = ["Mercury", "Venus"];
planets.push("Earth");
//planets.pop();
console.log(planets);